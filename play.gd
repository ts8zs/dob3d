extends Node2D
const BPM = 128
const BARS = 4
var combo=0
var playing = false
const COMPENSATE_FRAMES = 2
const COMPENSATE_HZ = 60.0

enum SyncSource {
	SYSTEM_CLOCK,
	SOUND_CLOCK,
}


# Used by system clock.
var time_begin
var time_delay


func strsec(secs):
	var s = str(secs)
	if (secs < 10):
		s = "0" + s
	return s
	
	
var speed =1.0
var offset = 0
var lastread=0
var hitnote=load("res://notes/hitnote.tscn")
var left=load("res://notes/leftarrow.tscn")
var right=load("res://notes/rightarrow.tscn")
var up=load("res://notes/uparrow.tscn")
var content = [[1860,1],
[1860,3],
[2328,5],
[2563,1],
[2797,5],
[3031,1],
[3266,5],
[3383,5],
[3500,5],
[3617,5],
[3735,1],
[3735,3],
[4203,5],
[4438,1],
[4672,5],
[4789,5],
[4906,5],
[5024,5],
[5141,4],
[5141,1],
[5375,5],
[5610,1],
[5610,3],
[6078,5],
[6313,1],
[6547,1],
[6547,2],
[7016,5],
[7016,4],
[7485,1],
[7485,2],
[7836,2],
[7836,1],
[7953,5],
[8188,1],
[8188,2],
[8422,5],
[8539,1],
[8539,2],
[8891,1],
[8891,5],
[8891,2],
[9125,2],
[9360,1],
[9360,3],
[9594,2],
[9594,5],
[9828,1],
[10063,5],
[10063,2],
[10297,5],
[10531,1],
[10531,2],
[10766,5],
[10766,4],
[10883,5],
[11000,5],
[11117,5],
[11235,1],
[11235,2],
[11469,5],
[11469,4],
[11703,5],
[11938,1],
[11938,2],
[12172,5],
[12172,4],
[12289,5],
[12406,5],
[12524,5],
[12641,2],
[12641,1],
[12875,5],
[12875,4],
[13110,1],
[13110,2],
[13578,5],
[13813,1],
[13813,4],
[14047,2],
[14047,1],
[14516,5],
[14516,4],
[14985,3],
[15336,3],
[15688,3],
[15922,1],
[15922,2],
[16156,5],
[16274,5],
[16391,1],
[16391,4],
[16860,4],
[16860,5],
[16860,1],
[17328,2],
[17328,1],
[17563,4],
[17563,5],
[17797,2],
[17797,1],
[18031,4],
[18031,5],
[18266,4],
[18266,5],
[18383,5],
[18500,5],
[18617,5],
[18735,4],
[19203,1],
[19203,2],
[19438,5],
[19438,4],
[19672,1],
[19789,1],
[19906,1],
[20024,1],
[20141,5],
[20375,5],
[20610,1],
[20610,2],
[21078,1],
[21078,2],
[21313,1],
[21547,5],
[21547,3],
[22016,4],
[22250,5],
[22250,2],
[22485,4],
[22485,1],
[22602,2],
[22836,4],
[22836,1],
[22953,2],
[23188,4],
[23188,1],
[23305,2],
[23539,4],
[23539,1],
[23656,2],
[23891,5],
[24008,5],
[24125,3],
[24360,2],
[24360,1],
[24594,1],
[24594,2],
[24828,5],
[24945,5],
[25297,1],
[25297,2],
[25531,1],
[25531,2],
[25766,5],
[26000,1],
[26000,4],
[26235,4],
[26235,1],
[26586,3],
[26938,2],
[27172,4],
[27641,2],
[27875,3],
[28110,1],
[28110,4],
[28344,5],
[28461,5],
[28578,1],
[28578,4],
[28813,5],
[28930,5],
[29047,4],
[29047,1],
[29281,5],
[29399,5],
[29516,1],
[29516,4],
[29750,4],
[29750,1],
[29985,1],
[29985,4],
[30453,5],
[30453,2],
[30922,5],
[30922,4],
[31156,1],
[31274,1],
[31391,3],
[31391,5],
[31860,4],
[31860,5],
[31860,1],
[32328,2],
[32328,1],
[32563,4],
[32563,5],
[32797,2],
[32797,1],
[33031,4],
[33031,5],
[33266,4],
[33266,5],
[33383,5],
[33500,5],
[33617,5],
[33735,4],
[34203,1],
[34203,2],
[34438,5],
[34438,4],
[34672,1],
[34789,1],
[34906,1],
[35024,1],
[35141,5],
[35375,5],
[35610,1],
[36078,1],
[36078,2],
[36313,1],
[36547,5],
[36547,3],
[37016,4],
[37250,2],
[37250,5],
[37485,4],
[37485,1],
[37602,2],
[37836,4],
[37836,1],
[37953,2],
[38188,4],
[38188,1],
[38305,2],
[38539,4],
[38539,1],
[38656,2],
[38891,5],
[39008,5],
[39125,3],
[39360,2],
[39360,1],
[39594,1],
[39594,2],
[39828,5],
[39945,5],
[40297,1],
[40297,2],
[40531,1],
[40531,2],
[40766,5],
[41000,1],
[41000,2],
[41235,2],
[41235,1],
[41586,3],
[41938,2],
[42172,4],
[42641,2],
[42875,3],
[43110,1],
[43110,4],
[43344,5],
[43461,5],
[43578,1],
[43578,4],
[43813,5],
[43930,5],
[44047,4],
[44047,1],
[44281,5],
[44399,5],
[44516,1],
[44516,4],
[44750,4],
[44750,1],
[44985,1],
[44985,4],
[45102,5],
[45219,1],
[45336,5],
[45453,1],
[45570,1],
[45688,5],
[45805,5],
[45922,1],
[45922,2],
[46391,4],
[46391,5],
[46860,5],
[46860,2],
[47328,1],
[47563,2],
[47797,5],
[47797,4],
[48266,1],
[48266,4],
[48500,2],
[48735,5],
[48735,3],
[49203,1],
[49320,3],
[49672,1],
[49672,5],
[49789,3],
[50141,1],
[50375,5],
[50610,2],
[50610,1],
[51078,5],
[51313,2],
[51547,4],
[51781,5],
[52016,1],
[52250,4],
[52250,5],
[52485,1],
[52485,5],
[52485,3],
[52953,1],
[52953,5],
[52953,3],
[53422,1],
[53422,5],
[53539,3],
[53891,1],
[53891,5],
[54008,3],
[54360,1],
[54360,5],
[54360,2],
[54828,1],
[54828,5],
[55063,2],
[55297,5],
[55297,1],
[55297,4],
[55766,1],
[55766,5],
[56000,4],
[56000,1],
[56235,1],
[56235,5],
[56235,2],
[56703,1],
[56703,5],
[56938,2],
[57172,5],
[57172,1],
[57172,4],
[57641,1],
[57641,5],
[57875,1],
[57875,4],
[58110,5],
[58110,1],
[58110,2],
[58578,1],
[58578,5],
[58813,2],
[59047,1],
[59047,5],
[59047,4],
[59516,5],
[59516,1],
[59516,2],
[59750,5],
[59750,4],
[59985,1],
[60102,1],
[60219,5],
[60336,5],
[60453,1],
[60570,5],
[60688,1],
[60805,5],
[60922,1],
[60922,4],
[61156,5],
[61391,1],
[61391,2],
[61860,4],
[61860,5],
[61860,1],
[62328,2],
[62328,1],
[62563,4],
[62563,5],
[62797,2],
[62797,1],
[63031,4],
[63031,5],
[63266,4],
[63266,5],
[63383,5],
[63500,5],
[63617,5],
[63735,4],
[64203,1],
[64203,2],
[64438,5],
[64438,4],
[64672,1],
[64789,1],
[64906,1],
[65024,1],
[65141,5],
[65375,5],
[65610,1],
[65610,2],
[66078,1],
[66078,2],
[66313,1],
[66547,5],
[66547,3],
[67016,4],
[67250,5],
[67250,2],
[67485,4],
[67485,1],
[67602,2],
[67836,4],
[67836,1],
[67953,2],
[68188,4],
[68188,1],
[68305,2],
[68539,4],
[68539,1],
[68656,2],
[68891,5],
[69008,5],
[69125,3],
[69360,2],
[69360,1],
[69594,1],
[69594,2],
[69828,5],
[69945,5],
[70297,1],
[70297,2],
[70531,1],
[70531,2],
[70766,5],
[71000,1],
[71000,4],
[71235,4],
[71235,1],
[71586,3],
[71938,2],
[72172,4],
[72641,2],
[72875,3],
[73110,1],
[73110,4],
[73344,5],
[73461,5],
[73578,1],
[73578,4],
[73813,5],
[73930,5],
[74047,4],
[74047,1],
[74281,5],
[74399,5],
[74516,1],
[74516,4],
[74750,4],
[74750,1],
[74985,1],
[74985,4],
[75102,5],
[75219,1],
[75336,5],
[75453,1],
[75570,5],
[75688,1],
[75805,5],
[75922,1],
[76156,1],
[76274,1],
[76391,5],
[76508,5],
[76625,5],
[76860,4],
[76860,1],
[76860,5],
[77328,1],
[77328,2],
[77563,5],
[77563,4],
[77797,1],
[77797,2],
[78031,5],
[78031,4],
[78266,5],
[78266,4],
[78383,5],
[78500,5],
[78617,5],
[78735,4],
[79203,2],
[79203,1],
[79438,4],
[79438,5],
[79672,1],
[79789,1],
[79906,1],
[80024,1],
[80141,5],
[80375,5],
[80610,2],
[80610,1],
[81078,2],
[81078,1],
[81313,1],
[81547,3],
[81547,5],
[82016,4],
[82250,2],
[82250,5],
[82485,1],
[82485,4],
[82602,2],
[82836,1],
[82836,4],
[82953,2],
[83188,1],
[83188,4],
[83305,2],
[83539,1],
[83539,4],
[83656,2],
[83891,5],
[84008,5],
[84125,3],
[84360,1],
[84360,2],
[84594,2],
[84594,1],
[84828,5],
[84945,5],
[85297,2],
[85297,1],
[85531,2],
[85531,1],
[85766,5],
[86000,4],
[86000,1],
[86235,1],
[86235,4],
[86586,3],
[86938,2],
[87172,4],
[87641,2],
[87875,3],
[88110,4],
[88110,1],
[88344,5],
[88461,5],
[88578,4],
[88578,1],
[88813,5],
[88930,5],
[89047,1],
[89047,4],
[89281,5],
[89399,5],
[89516,4],
[89516,1],
[89750,1],
[89750,4],
[89985,4],
[89985,1],
[90453,5],
[90688,1],
[90805,1],
[90922,5],
[91391,4],
[91625,4]]
var notes=[]

func _process(_delta):
#	print(Global.musictime)
	if not playing or not $Player.playing:
		return
	var time = 0.0
	time = $Player.get_playback_position() + AudioServer.get_time_since_last_mix() - AudioServer.get_output_latency() + (1 / COMPENSATE_HZ) * COMPENSATE_FRAMES
	var beat = int(time * BPM / 60.0)
	var seconds = int(time)
	var mstime = int(time*1000)
	Global.musictime = mstime
	$combo.text=str(Global.combo ,"x")
	$score.text=str(Global.score)
#	$grav.text=str("x",int(Global.grav.x),"y",int(Global.grav.y),"z",int(Global.grav.z))
	var seconds_total = int($Player.stream.get_length())
	$Label.text = str("BEAT: ", beat % BARS + 1, "/", BARS, " TIME: ", seconds / 60, ":", strsec(seconds % 60), " / ", seconds_total / 60, ":", strsec(seconds_total % 60))
	# note create logic
#	hitnote.instance().getNo
	while lastread<(content.size()) && int(content[lastread][0])<(mstime+1000):
		var instance
		if content[lastread][1] == 1:
			instance=hitnote.instance()
			instance.initialize(1,int(content[lastread][0]))
			add_child_below_node($rail,instance)
		if content[lastread][1] == 2:
			instance=left.instance()
			instance.initialize(2,int(content[lastread][0]))
			add_child_below_node($rail,instance)
		if content[lastread][1] == 3:
			instance=up.instance()
			instance.initialize(3,int(content[lastread][0]))
			add_child_below_node($rail,instance)
		if content[lastread][1] == 4:
			instance=right.instance()
			instance.initialize(4,int(content[lastread][0]))
			add_child_below_node($rail,instance)
		if content[lastread][1] == 5:
			instance=hitnote.instance()
			instance.initialize(5,int(content[lastread][0]))
			add_child_below_node($rail,instance)
		lastread+=1
	# note move logic
	
		
			
			
#	print( "time", mstime )
#	pass

	
func _on_BPMSync_ready():
	# read notes
#	var file = File.new()
#	file.open("res://easymode.dob", File.READ)
#	for line in file.get_as_text().split("\n"):
#		var a=line.split(',')
#		content.append(a)
	# play
#	print("size = ",content.size())
	playing = true
	$Player.stream.loop=0;
	$Player.play(0)
	pass # Replace with function body.


func _on_Player_finished():
	get_tree().change_scene("res://result.tscn")
	pass # Replace with function body.


func _on_leftbutton_pressed():
	print('left')
	pass # Replace with function body.


func _on_rightbutton_pressed():
	print('right')
	pass # Replace with function body.
